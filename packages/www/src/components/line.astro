---
import type { HTMLAttributes } from 'astro/types'

interface Props extends HTMLAttributes<'div'> {
  number: number
  href?: string
}

const { class: _, href, ...props } = Astro.props
const Element = href ? 'a' : 'div'
---

<Fragment>
  <!-- @ts-expect-error -->
  <Element
    {...props}
    {href}
    target={href ? '_blank' : undefined}
    tabindex="0"
    class:list={{
      'group flex items-center text-gray-10 hover:bg-gray-5 px-6': true,
      'active:border-orange active:border-l-2 active:pl-[22px] active:text-gray-11 active:bg-gray-6': true,
      'data-[state=success]:border-green-11 data-[state=success]:bg-green-5 data-[state=success]:border-l-2 data-[state=success]:pl-[22px]': true,
      'data-[state=error]:border-red-11 data-[state=error]:bg-red-5 data-[state=error]:border-l-2 data-[state=error]:pl-[22px]': true,
      '[&>svg]:hover:block [&>svg]:active:text-gray-11': href,
      'focus:border-orange focus:border-l-2 focus:pl-[22px] focus:text-gray-11 focus:bg-gray-6 focus:outline-none': true,
      [Astro.props.class ?? '']: !!Astro.props.class,
    }}
  >
    <div class="text-center pr-10 self-start">{Astro.props.number}</div>
    <slot />
    <svg
      class="hidden w-5 h-5 ml-6 text-gray-10 shrink-0"
      viewBox="0 0 20 20"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g id="square-arrow-top-right, open, new, link, open link, box, arrow">
        <path
          class="stroke-current"
          d="M15.2083 11.6667V16.875H3.125V4.79167H7.70833M11.4583 3.125H16.875V8.54167M9.16667 10.8333L16.25 3.75"
          stroke-width="1.5"
          stroke-linecap="square"
        >
        </path>
      </g>
    </svg>
  </Element>
</Fragment>
